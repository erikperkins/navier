apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: github
  namespace: argo-events
spec:
  service:
    ports:
      - port: 12000
        targetPort: 12000
  github:
    push:
      repositories:
        - owner: erikperkins
          names:
            - pascal
      webhook:
        endpoint: /push
        port: "12000"
        method: POST
        url: http://argo.cauchy.link/webhook/github
      events:
        - "push"
      apiToken:
        name: github-access
        key: token
      insecure: true
      active: true
      contentType: json
# Uncomment to use secure webhook
#    example-secure:
#      port: "13000"
#      endpoint: "/secure"
#      method: "POST"
#      # k8s secret that contains the cert
#      serverCertSecret:
#        name: my-secret
#        key: cert-key
#      # k8s secret that contains the private key
#      serverKeySecret:
#        name: my-secret
#        key: pk-key
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo
  namespace: argo-events
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: argo.cauchy.link
      http:
        paths:
          - path: /webhook/github(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: github-eventsource-svc
                port:
                  number: 12000
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-payload
      eventSourceName: github
      eventName: push
  triggers:
    - template:
        name: github-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-
              spec:
                arguments:
                  parameters:
                    - name: repository
                      value: "repo"
                    - name: git_sha
                      value: "commit"
                    - name: tag
                      value: "tag"
                    - name: time
                      value: "time"
                workflowTemplateRef:
                  name: pascal
          parameters:
            - src:
                dependencyName: github-payload
                dataKey: body.repository.full_name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-payload
                dataKey: body.after
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: github-payload
                dataTemplate: "{{.Input.body.after | substr 0 7}}"
              dest: spec.arguments.parameters.2.value
            - src:
                dependencyName: github-payload
                contextTemplate: "{{.Input.time}}"
              dest: spec.arguments.parameters.3.value
