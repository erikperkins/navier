clickhouse:
  clickhouse:
    configmap:
      compression:
        cases:
          - method: zstd
            min_part_size: "1000000"
      keep_alive_timeout: "3"
      logger:
        size: 100M
      mark_cache_size: "5368709120"
      profiles:
        enabled: false
        profile:
          - config:
              max_memory_usage: "10000000"
      uncompressed_cache_size: "8589934592"
    metrics:
      image:
        storage: 1Gi
    persistentVolumeClaim:
      dataPersistentVolume:
        storage: 1Gi
      logsPersistentVolume:
        storage: 1Gi
    replicas: "1"
  enabled: true
filestore:
  backend: s3
  s3:
    bucketName: sentry
    endpointUrl: "http://minio.minio.svc.cluster.local:9000"
hooks:
  dbInit:
    resources:
      limits:
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 2Gi
  snubaInit:
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 400m
        memory: 2Gi
ingress:
  alb:
    httpRedirect: false
  enabled: true
  regexPathStyle: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
  hostname: sentry.cauchy.link
kafka:
  defaultReplicationFactor: 1
  logPersistence:
    size: 1Gi
  logRetentionBytes: _1073741824
  logRetentionHours: 24
  numIoThreads: 1
  numNetworkThreads: 1
  numPartitions: 1
  numRecoveryThreadsPerDataDir: 1
  offsetsTopicReplicationFactor: 1
  pdb:
    create: false
    maxUnavailable: 1
    minAvailable: ""
  persistence:
    size: 1Gi
  replicaCount: 1
  transactionStateLogMinIsr: 1
  transactionStateLogReplicationFactor: 1
  zookeeper:
    persistence:
      dataLogDir:
        size: 1Gi
      enabled: true
      size: 1Gi
    replicaCount: 1
mail:
  backend: dummy
  from: ""
  host: ""
  password: ""
  port: 25
  useSsl: false
  useTls: false
  username: ""
memcached:
  autoscaling:
    enabled: false
    maxReplicas: 2
    minReplicas: 1
    targetCPU: 50
    targetMemory: 50
  memoryLimit: "512"
  persistence:
    size: 1Gi
  resources:
    limits: {}
    requests:
      cpu: 250m
      memory: 256Mi
nginx:
  enabled: false
postgresql:
  common:
    global:
      postgresql:
        postgresqlDatabase: ""
        postgresqlPassword: ""
        postgresqlUsername: ""
        replicationPassword: ""
        servicePort: ""
  initdbPassword: ""
  initdbScripts: {}
  initdbScriptsConfigMap: ""
  initdbScriptsSecret: ""
  initdbUser: ""
  persistence:
    size: 1Gi
  replication:
    applicationName: sentry
    enabled: false
    numSynchronousReplicas: 1
    password: repl_password
    readReplicas: 1
    singleService: true
    synchronousCommit: "on"
    uniqueServices: false
    user: repl_user
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
rabbitmq:
  persistence:
    enabled: true
    size: 1Gi
  replicaCount: 1
redis:
  master:
    persistence:
      size: 1Gi
  replica:
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPU: "50"
      targetMemory: "50"
    persistence:
      size: 1Gi
    replicaCount: 1
sentry:
  billingMetricsConsumer:
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
  cleanup:
    days: 7
    enabled: true
    failedJobsHistoryLimit: 3
    schedule: 0 0 * * *
    successfulJobsHistoryLimit: 3
  ingestConsumer:
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
    replicas: 1
  ingestMetricsConsumerPerf:
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
    replicas: 1
  ingestMetricsConsumerRh:
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
    replicas: 1
  singleOrganization: true
  web:
    affinity: {}
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
    replicas: 1
  worker:
    autoscaling:
      enabled: false
      maxReplicas: 3
      minReplicas: 2
      targetCPUUtilizationPercentage: 50
    replicas: 2
snuba:
  api:
    autoscaling:
      enabled: false
      maxReplicas: 2
      minReplicas: 1
      targetCPUUtilizationPercentage: 50
    replicas: 1
  cleanupErrors:
    enabled: true
    successfulJobsHistoryLimit: 3
  cleanupTransactions:
    failedJobsHistoryLimit: 3
    successfulJobsHistoryLimit: 3
  consumer:
    replicas: 1
symbolicator:
  enabled: false
system:
  adminEmail: ""
  public: false
  url: ""
user:
  create: true
  email: admin@cauchy.link
  existingSecret: sentry-override
  existingSecretKey: password
zookeeper:
  persistence:
    dataLogDir:
      size: 1Gi
    enabled: true
    selector: {}
    size: 1Gi
  replicaCount: 1
